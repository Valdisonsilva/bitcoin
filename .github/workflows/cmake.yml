# Copyright (c) 2023-present The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or https://opensource.org/license/mit/.

name: CMake
on:
  # Running for pushes is enough in the cmake-staging branch.
  # pull_request:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}${{ github.event_name != 'pull_request' && github.run_id || github.ref }}
  cancel-in-progress: true

jobs:
  debug-ccache:
    name: 'Debug ccache'
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependency packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends ccache libboost-dev libevent-dev
          echo "CCACHE_DIR=${{ runner.temp }}/ccache" >> "$GITHUB_ENV"

      - name: Restore Ccache cache
        uses: actions/cache/restore@v3
        id: ccache-cache
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ github.job }}-ccache-${{ github.run_id }}
          restore-keys: ${{ github.job }}-ccache-

      - name: Generate build system
        run: |
          cmake -B build

      - name: Ccache stats BEFORE
        run: |
          ccache --version | head -n 1
          ccache --show-stats --verbose
          ccache --zero-stats

      - name: Build
        run: |
          cmake --build build -j $(nproc) -t bitcoind

      - name: Ccache stats AFTER
        run: |
          ccache --version | head -n 1
          ccache --show-stats --verbose

      - name: Save Ccache cache
        uses: actions/cache/save@v3
        if: github.event_name != 'pull_request' && steps.ccache-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ github.job }}-ccache-${{ github.run_id }}
