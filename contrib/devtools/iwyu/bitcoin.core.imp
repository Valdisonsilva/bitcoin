# Fixups / upstreamed changes
[
  { include: [ "<bits/chrono.h>", private, "<chrono>", public ] },

  # Boost.Test
  { include: [ "<boost/preprocessor/arithmetic/dec.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/comparison/not_equal.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/control/expr_iif.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/control/iif.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/logical/bool.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/logical/compl.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/repetition/for.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/seq/elem.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/seq/enum.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/seq/size.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/tuple/elem.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/preprocessor/variadic/elem.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/tools/assertion.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/tools/assertion_result.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/tools/interface.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/tools/old/interface.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/tree/test_unit.hpp>", public, "<boost/test/included/unit_test.hpp>", public ] },
  { include: [ "<boost/test/unit_test_log.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/unit_test_suite.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/utils/basic_cstring/basic_cstring.hpp>", public, "<boost/test/unit_test.hpp>", public ] },
  { include: [ "<boost/test/utils/lazy_ostream.hpp>", public, "<boost/test/unit_test.hpp>", public ] },

  # Boost.Signals2
  { symbol: ["boost::signals2::mutex", "private", "<boost/signals2/signal.hpp>", "public" ] },
  { symbol: ["boost::signals2::variadic_signal", "private", "<boost/signals2/signal.hpp>", "public" ] },
]
