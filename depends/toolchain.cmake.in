set(CMAKE_SYSTEM_NAME @CMAKE_SYSTEM_NAME@)
set(CMAKE_SYSTEM_PROCESSOR @CMAKE_SYSTEM_PROCESSOR@)

function(split_compiler_launcher env_compiler launcher compiler)
  set(${launcher})
  list(GET ${env_compiler} 0 start_token)
  if(start_token STREQUAL "env")
    set(${compiler})
    set(env_arg_parsing TRUE)
    foreach(token IN LISTS ${env_compiler})
      if(env_arg_parsing)
        list(APPEND ${launcher} ${token})
        set(env_arg_parsing FALSE)
        continue()
      elseif(token STREQUAL "-u")
          list(APPEND ${launcher} ${token})
          set(env_arg_parsing TRUE)
          continue()
      endif()
      list(APPEND ${compiler} ${token})
    endforeach()
  else()
    set(${compiler} ${${env_compiler}})
  endif()
  set(${launcher} ${${launcher}} PARENT_SCOPE)
  set(${compiler} ${${compiler}} PARENT_SCOPE)
endfunction()

set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CMAKE_C_COMPILER@)
split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)
set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CMAKE_CXX_COMPILER@)
split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)
set(DEPENDS_OBJCXX_COMPILER_WITH_LAUNCHER @CMAKE_CXX_COMPILER@)
split_compiler_launcher(DEPENDS_OBJCXX_COMPILER_WITH_LAUNCHER CMAKE_OBJCXX_COMPILER_LAUNCHER CMAKE_OBJCXX_COMPILER)
if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.21)
  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})
  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})
  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_OBJCXX_COMPILER_LAUNCHER})
endif()

if(CMAKE_VERSION VERSION_LESS 3.19)
  set(CMAKE_C_FLAGS_INIT ${CMAKE_C_COMPILER})
  list(REMOVE_AT CMAKE_C_FLAGS_INIT 0)
  list(GET CMAKE_C_COMPILER 0 CMAKE_C_COMPILER)
  set(CMAKE_CXX_FLAGS_INIT ${CMAKE_CXX_COMPILER})
  list(REMOVE_AT CMAKE_CXX_FLAGS_INIT 0)
  list(GET CMAKE_CXX_COMPILER 0 CMAKE_CXX_COMPILER)
  set(CMAKE_OBJCXX_FLAGS_INIT ${CMAKE_OBJCXX_COMPILER})
  list(REMOVE_AT CMAKE_OBJCXX_FLAGS_INIT 0)
  list(GET CMAKE_OBJCXX_COMPILER 0 CMAKE_OBJCXX_COMPILER)
endif()
list(APPEND CMAKE_C_FLAGS_INIT @CMAKE_C_FLAGS_INIT@)
string(REPLACE ";" " " CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT}")
list(APPEND CMAKE_CXX_FLAGS_INIT @CMAKE_CXX_FLAGS_INIT@)
string(REPLACE ";" " " CMAKE_CXX_FLAGS_INIT "${CMAKE_CXX_FLAGS_INIT}")
string(REPLACE ";" " " CMAKE_OBJCXX_FLAGS_INIT "${CMAKE_OBJCXX_FLAGS_INIT}")

set(CMAKE_AR "@CMAKE_AR@")
set(CMAKE_RANLIB "@CMAKE_RANLIB@")
set(CMAKE_STRIP "@CMAKE_STRIP@")
set(CMAKE_OBJCOPY "@CMAKE_OBJCOPY@")
set(CMAKE_INSTALL_NAME_TOOL "@CMAKE_INSTALL_NAME_TOOL@")

set(OTOOL "@OTOOL@")

set(CMAKE_BUILD_TYPE @CMAKE_BUILD_TYPE@)
if(CMAKE_BUILD_TYPE STREQUAL "release")
  set(CMAKE_BUILD_TYPE "Release")
endif()
if(CMAKE_BUILD_TYPE STREQUAL "debug")
  set(CMAKE_BUILD_TYPE "Debug")
endif()

set(CMAKE_FIND_ROOT_PATH "@CMAKE_FIND_ROOT_PATH@")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(QT_CROSS_LIBS_PATH "${CMAKE_FIND_ROOT_PATH}/lib")
set(PKG_CONFIG_PATH "${CMAKE_FIND_ROOT_PATH}/lib/pkgconfig")
if("@allow_host_packages@" STREQUAL "1")
  set(DEPENDS_ALLOW_HOST_PACKAGES TRUE)
else()
  set(DEPENDS_ALLOW_HOST_PACKAGES FALSE)
  set(PKG_CONFIG_LIBDIR "${PKG_CONFIG_PATH}")
endif()
set(QT_TRANSLATIONS_DIR "${CMAKE_FIND_ROOT_PATH}/translations")

if(NOT WITH_GUI AND "@no_qt@" STREQUAL "1")
  set(WITH_GUI "no" CACHE STRING "")
endif()

if(NOT WITH_QRENCODE AND "@no_qr@" STREQUAL "1")
  set(WITH_QRENCODE OFF CACHE STRING "")
endif()

if(NOT WITH_ZMQ AND "@no_zmq@" STREQUAL "1")
  set(WITH_ZMQ OFF CACHE STRING "")
endif()

if(NOT ENABLE_WALLET AND "@no_wallet@" STREQUAL "1")
  set(ENABLE_WALLET OFF CACHE BOOL "")
endif()

if(NOT WITH_BDB AND "@no_bdb@" STREQUAL "1")
  set(WITH_BDB OFF CACHE STRING "")
endif()

if(NOT WITH_SQLITE AND "@no_sqlite@" STREQUAL "1")
  set(WITH_SQLITE OFF CACHE STRING "")
endif()

if(NOT WITH_MINIUPNPC AND "@no_upnp@" STREQUAL "1")
  set(WITH_MINIUPNPC OFF CACHE STRING "")
endif()

if(NOT WITH_NATPMP AND "@no_natpmp@" STREQUAL "1")
  set(WITH_NATPMP OFF CACHE STRING "")
endif()

if(NOT WITH_USDT AND "@no_usdt@" STREQUAL "1")
  set(WITH_USDT OFF CACHE STRING "")
endif()

if(DEFINED ENV{PYTHONPATH})
  set(PYTHONPATH "${CMAKE_FIND_ROOT_PATH}/native/lib/python3/dist-packages:$ENV{PYTHONPATH}")
else()
  set(PYTHONPATH "${CMAKE_FIND_ROOT_PATH}/native/lib/python3/dist-packages")
endif()
